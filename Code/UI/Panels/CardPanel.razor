@using System
@using Sandbox.UI

@inherits Panel
@namespace CardGame.UI

@if ( Card is null )
{
	return;
}

<root>
	<div class="header @( Card.Rarity )">
		<label class="card-name">@Card.Name</label>
		<div class="card-cost">
			@if ( Card.EffectiveCost.Ep > 0 )
			{
				<label>@( Card.EffectiveCost.Ep )EP</label>
			}

			<label>@( Card.EffectiveCost.Mp )MP</label>
		</div>
	</div>

	@if ( Card.Actions.Any() )
	{
		<div class="actions">
			@if ( Card.IsInstant )
			{
				<label class="card-instant">[Instant]</label>
			}
			
			@if ( Card.Targeting != Card.CardTargets.Enemy )
			{
				<label class="card-targeting">[Target @( Card.Targeting )]</label>
			}

			@if ( Card.Targets > 1 )
			{
				<label class="card-targets">[AOE - Targets @( Card.Targets ) Slots]</label>
			}

			@foreach ( var action in Card.Actions )
			{
				switch ( action.Type )
				{
					case CardGame.Action.ActionType.Attack:
						if ( action.EffectivePower.IsRandom )
						{
							<label class="action">Deal @( action.EffectivePower.Min )-@( action.EffectivePower.Max ) damage</label>
						}
						else
						{
							<label class="action">Deal @( action.EffectivePower.Min ) damage</label>
						}
						break;
					case CardGame.Action.ActionType.Defense:
					case CardGame.Action.ActionType.Effect:
						var desc = action.Effect?.Description;
						if ( !string.IsNullOrWhiteSpace( desc ) )
						{
							if ( action.EffectivePower.IsRandom )
							{
								<label class="action effect" IsRich="@true">
									@desc.Replace("@", $"{action.EffectivePower.Min}-{action.EffectivePower.Max}").Replace("\n", "<br>"))
								</label>
							}
							else
							{
								<label class="action effect" IsRich="@true">
									@desc.Replace("@", action.EffectivePower.Min.ToString()).Replace("\n", "<br>"))
								</label>
							}
						}
						break;
					default:
						throw new ArgumentOutOfRangeException();
				}
			}
		</div>
	}

	@if ( HasClass( "hide" ) )
	{
		<img class="missing-icon" src="/materials/cards/missing.png" alt="?"/>
	}
	
	<div class="card-type @( Card.Rarity )">- @( Card.Type ) Card -</div>
</root>
