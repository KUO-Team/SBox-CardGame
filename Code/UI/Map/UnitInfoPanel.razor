@using Sandbox.UI
@using CardGame.Data;

@inherits Panel
@namespace CardGame.UI

<root>
	<div class="main">
		@if ( Unit is not null )
		{
			<div class="unit-stats">
				<div class="row">
					<label class="unit-name">@( Unit.Name )</label>
					<label class="unit-level">Lv.@( Unit.Level )</label>
				</div>

				<div class="health-bar">
					<div class="inner-bar" style="width: @( Unit.Hp / Unit.Hp * 100 )%"></div>
				</div>

				<div class="mana-bar">
					<div class="inner-bar" style="width: @( Unit.Mp / Unit.Mp * 100 )%"></div>
				</div>

				<div class="row">
					<label class="health">@( Unit.Hp )/@( Unit.Hp )</label>
					<label class="mana">@( Unit.Mp )/@( Unit.Mp )</label>
				</div>
			</div>
		}

		@if ( Unit is not null )
		{
			<div class="tab-selection">
				<button class="@( Unit.Deck.Any() ? "" : "disabled" ) @( SelectedTab?.Id == "deck" ? "disabled" : "" )" onclick="@( () => ChangeTabs( "deck" ) )">Deck</button>
				<button class="@( Unit.Passives.Any() ? "" : "disabled" ) @( SelectedTab?.Id == "passives" ? "disabled" : "" )" onclick="@( () => ChangeTabs( "passives" ) )">Passives</button>
			</div>
		}

		<div class="tabs" @ref=" _tabContainer">
			<div class="tab unit-deck hidden" id="deck">

				@if ( Unit is not null )
				{
					foreach ( var cardId in Unit.Deck )
					{
						var card = CardDataList.GetById( cardId );
						if ( card is not null )
						{
							<CardPanel Card="@card"></CardPanel>
						}
					}
				}
			</div>

			<div class="tab unit-passives hidden" id="passives">
				@if ( Unit is not null )
				{
					foreach ( var passiveId in Unit.Passives )
					{
						var passive = PassiveAbilityDataList.GetById( passiveId );
						if ( passive is not null )
						{
							<PassiveAbilityPanel Passive="@passive"></PassiveAbilityPanel>
						}
					}
				}
			</div>
		</div>

		<div class="button-container">
			<button onclick="@Close">Close</button>
		</div>
	</div>
</root>
